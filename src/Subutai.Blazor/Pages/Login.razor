@page "/"
@layout LoginLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@using Subutai.Domain.Model
@using Microsoft.AspNetCore.Components.Forms

<div class="logincontainer">
    <EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <!-- Hata mesajı bölümü -->
        @if (showErrorMessage)
        {
            <div class="error-message">
                Invalid credentials. Please try again.
            </div>
        }
        <div class="form-group">
            <label for="E-Mail">E-Mail:</label>
            <InputText id="E-Mail" class="form-control" @bind-Value="loginModel.Email" placeholder="Enter your E-mail" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Enter your password" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
    </EditForm>
</div>
@code {
    public bool showErrorMessage = false;
    private UserEntity loginModel = new UserEntity();

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7108/api/login/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                // Başarı durumunda, örneğin kullanıcıyı dashboard'a yönlendirebilirsiniz
                Navigation.NavigateTo("/projectlist");
            }
            else
            {
                // Hatalı giriş
               showErrorMessage = true;
                Console.WriteLine("Invalid credentials");
                ClearForm();
            }
        }
        catch (Exception ex)
        {
            // Hata durumu
            Console.WriteLine($"Error: {ex.Message}");
            ClearForm();
        }
    }
    private void ClearForm()
    {
        loginModel.Email = string.Empty;
        loginModel.Password = string.Empty;
    }

}
